/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    id 'java'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.10"
    id 'org.jetbrains.kotlin.plugin.spring' version "1.4.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.4.10"
}


mainClassName = 'Application'

group 'edu.upc.essi.dtim'
version '1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.13.5'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    implementation group: 'org.apache.jena', name: 'apache-jena-libs', version: '4.1.0', ext: 'pom'
    implementation group: 'org.apache.jena', name: 'jena-querybuilder', version: '4.1.0'

    implementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'
    implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0-jre'

    implementation 'org.jgrapht:jgrapht-core:1.2.0'

    //implementation 'org.apache.spark:spark-core_2.11:2.4.3'
    //implementation 'org.apache.spark:spark-sql_2.11:2.4.3'

    implementation group: 'org.apache.spark', name: 'spark-core_2.13', version: '3.2.0'
    implementation group: 'org.apache.spark', name: 'spark-sql_2.13', version: '3.2.0'


    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.6'
    implementation group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.44'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.0'
    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.10'

    //compile files('lib/sqlite4java-392/sqlite4java.jar')
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.6'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'

}

test {
    useJUnitPlatform()

    testLogging.showStandardStreams = true
    ignoreFailures = false


}

tasks.withType(Test) {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}
